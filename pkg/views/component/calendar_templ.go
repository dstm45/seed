// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package component

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Calendrier() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"bg-white shadow-lg rounded-2xl p-4 w-full max-w-md\"><div class=\"flex justify-between items-center mb-2\"><button id=\"prev\" class=\"px-3 py-1 rounded hover:bg-gray-200\">&larr;</button><h2 id=\"monthYear\" class=\"text-lg font-semibold\"></h2><button id=\"next\" class=\"px-3 py-1 rounded hover:bg-gray-200\">&rarr;</button></div><!-- Display current date in DD-MM-YYYY format --><div class=\"text-center mb-4\"><span class=\"font-medium\">Date:</span> <span id=\"formattedDate\" class=\"ml-1 text-purple-600\"></span></div><div class=\"grid grid-cols-7 gap-2 text-center text-sm\"><div class=\"text-gray-500\">Di</div><div class=\"text-gray-500\">Lu</div><div class=\"text-gray-500\">Ma</div><div class=\"text-gray-500\">Me</div><div class=\"text-gray-500\">Je</div><div class=\"text-gray-500\">Ve</div><div class=\"text-gray-500\">Sa</div><div id=\"days\" class=\"contents\"></div></div></div><script>\n  const monthYearEl = document.getElementById('monthYear');\n  const daysContainer = document.getElementById('days');\n  const formattedDateEl = document.getElementById('formattedDate');\n  const today = new Date();\n  // Set time to 0 to avoid timezone issues with date comparison\n  today.setHours(0, 0, 0, 0);\n\n  let selectedDate = new Date(today);\n  let currentMonth = selectedDate.getMonth();\n  let currentYear = selectedDate.getFullYear();\n\n  function pad(n) {\n    return String(n).padStart(2, '0');\n  }\n\n  function updateFormattedDate() {\n    formattedDateEl.textContent = `${pad(selectedDate.getDate())}-${pad(selectedDate.getMonth() + 1)}-${selectedDate.getFullYear()}`;\n  }\n\n  function renderCalendar(month, year) {\n    daysContainer.innerHTML = '';\n    monthYearEl.textContent = new Intl.DateTimeFormat('fr-FR', { month: 'long', year: 'numeric' }).format(new Date(year, month));\n\n    const firstDayOfMonth = new Date(year, month, 1);\n    const firstDayIndex = firstDayOfMonth.getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n\n    // Empty slots for days of week before 1st of month\n    for (let i = 0; i < firstDayIndex; i++) {\n      daysContainer.appendChild(document.createElement('div'));\n    }\n\n    // Calendar days\n    for (let d = 1; d <= daysInMonth; d++) {\n      const dayEl = document.createElement('div');\n      dayEl.textContent = d;\n      dayEl.className = 'py-2 rounded cursor-pointer hover:bg-purple-100';\n      \n      const currentDate = new Date(year, month, d);\n\n      // Highlight today's date\n      if (currentDate.getTime() === today.getTime()) {\n        dayEl.classList.add('bg-purple-200');\n      }\n\n      // Highlight selected date\n      if (currentDate.getTime() === selectedDate.getTime()) {\n        dayEl.classList.add('bg-purple-600', 'text-white');\n      }\n\n      dayEl.addEventListener('click', () => {\n        selectedDate = new Date(year, month, d);\n        updateFormattedDate();\n        // Re-render to update highlights\n        renderCalendar(currentMonth, currentYear);\n      });\n\n      daysContainer.appendChild(dayEl);\n    }\n  }\n\n  document.getElementById('prev').addEventListener('click', () => {\n    currentMonth--;\n    if (currentMonth < 0) {\n      currentMonth = 11;\n      currentYear--;\n    }\n    renderCalendar(currentMonth, currentYear);\n  });\n\n  document.getElementById('next').addEventListener('click', () => {\n    currentMonth++;\n    if (currentMonth > 11) {\n      currentMonth = 0;\n      currentYear++;\n    }\n    renderCalendar(currentMonth, currentYear);\n  });\n\n  // Initial setup\n  updateFormattedDate();\n  renderCalendar(currentMonth, currentYear);\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
